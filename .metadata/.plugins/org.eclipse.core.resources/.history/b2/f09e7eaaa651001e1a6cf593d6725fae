package main;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class KeyHandler implements KeyListener {
	
	GamePanel gp;
	public boolean upPressed, downPressed, leftPressed, rightPressed, enterPressed;
	
	public KeyHandler(GamePanel gp) {
		this.gp = gp;
	}

	@Override
	public void keyTyped(KeyEvent e) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void keyPressed(KeyEvent e) {
		int code = e.getKeyCode();
		// TITLE STATE
		if(gp.gameState == gp.titleState) {
			titleState(code);
		}
		// PLAY STATE
		else if(gp.gameState == gp.playState){
			playState(code);
		}
		//PAUSE STATE
		else if(gp.gameState == gp.pauseState){
			pauseState(code);
		}
		// DIALOGUE STATE
		else if(gp.gameState == gp.dialogueState || gp.gameState == gp.cutSceneState){
			dialogueState(code);
		}
		// CHARACTER STATE
		else if(gp.gameState == gp.characterState){
			characterState(code);
		}
		else if(gp.gameState == gp.gameOverState){
			gameOverState(code);
		}
	}
	private void gameOverState(int code) {
		int numOfOptions = 2;
		if(code == KeyEvent.VK_D) {
			gp.playSE(4);
			gp.ui.commandNum--;
			if (gp.ui.commandNum < 0) {
				gp.ui.commandNum = numOfOptions-1;
			}
		}
		if(code == KeyEvent.VK_A) {
			gp.playSE(4);
			gp.ui.commandNum++;
			if (gp.ui.commandNum >= numOfOptions) {
				gp.ui.commandNum = 0;
			}
		}
		if(code == KeyEvent.VK_ENTER) {
			gp.playSE(4);
			if (gp.ui.commandNum == 0) {
				// RETRY
				gp.resetGame();
			}
			if (gp.ui.commandNum == 1) {
				// QUIT
				System.exit(0);
			}
//			if (gp.ui.commandNum == 2) {
//				System.exit(0);
//			}
		}		
	}

	public void titleState(int code) {
		if(gp.ui.titleScreenState == 0) {
			int numOfOptions = 2;
			if(code == KeyEvent.VK_D) {
				gp.playSE(4);
				gp.ui.commandNum--;
				if (gp.ui.commandNum < 0) {
					gp.ui.commandNum = numOfOptions-1;
				}
			}
			if(code == KeyEvent.VK_A) {
				gp.playSE(4);
				gp.ui.commandNum++;
				if (gp.ui.commandNum >= numOfOptions) {
					gp.ui.commandNum = 0;
				}
			}
			if(code == KeyEvent.VK_ENTER) {
				if (gp.ui.commandNum == 0) {
					// START GAME
//					gp.ui.titleScreenState = 1;
					gp.gameState = gp.cutSceneState;
					gp.eHandler.triggerBrightCrabCutScene();
				}
				if (gp.ui.commandNum == 1) {
					System.exit(0);
				}
//				if (gp.ui.commandNum == 2) {
//					System.exit(0);
//				}
			}
		}
		else if(gp.ui.titleScreenState == 1) {
			if(code == KeyEvent.VK_W) {
				gp.ui.commandNum--;
				if (gp.ui.commandNum < 0) {
					gp.ui.commandNum = 3;
				}
			}
			if(code == KeyEvent.VK_S) {
				gp.ui.commandNum++;
				if (gp.ui.commandNum > 3) {
					gp.ui.commandNum = 0;
				}
			}
			if(code == KeyEvent.VK_ENTER) {
				if (gp.ui.commandNum == 0) {
					gp.gameState = gp.playState;
				}
				if (gp.ui.commandNum == 1) {
					gp.gameState = gp.playState;
				}
				if (gp.ui.commandNum == 2) {
					gp.gameState = gp.playState;
				}
				if (gp.ui.commandNum == 3) {
					gp.ui.titleScreenState = 0;
					gp.ui.commandNum = 0;
				}
			}
		}
	}
	public void playState(int code) {
		if(code == KeyEvent.VK_W) {
			upPressed = true;
		}
		if(code == KeyEvent.VK_A) {
			leftPressed = true;
		}
		if(code == KeyEvent.VK_S) {
			downPressed = true;
		}
		if(code == KeyEvent.VK_D) {
			rightPressed = true;
		}
		if(code == KeyEvent.VK_P) {
			gp.gameState = gp.pauseState;
		}
		if(code == KeyEvent.VK_C) {
			gp.gameState = gp.characterState;
		}
		if(code == KeyEvent.VK_ENTER) {
			enterPressed = true;
		}
		if(code == KeyEvent.VK_B) {
			gp.drawHitBoxes = !gp.drawHitBoxes;
		}	
		if(code == KeyEvent.VK_R) {
			switch(gp.currentMap) {
			case 0 : gp.tileM.loadMap("/maps/map02.txt", 0); break;
			case 1 : gp.tileM.loadMap("/maps/map03.txt", 1); break;
			}
		}	
		if(code == KeyEvent.VK_Q) {
			System.exit(0);
		}
	}
	public void pauseState(int code) {
		if(code == KeyEvent.VK_P) {
			gp.gameState = gp.playState;
		}
	}
	public void dialogueState(int code) {
		if(code == KeyEvent.VK_ENTER) {
			enterPressed = true;
//			gp.player.interactNPCEventHandler();
		}
	}
	public void characterState(int code) {
		if(code == KeyEvent.VK_C) {
			gp.gameState = gp.playState;
		}
		if(code == KeyEvent.VK_W ) {
			if(gp.ui.slotRow != 0) {
				gp.playSE(4);
				gp.ui.slotRow--;
			}
		}
		if(code == KeyEvent.VK_A ) {
			if(gp.ui.slotCol != 0) {
				gp.playSE(4);
				gp.ui.slotCol--;
			}
		}
		if(code == KeyEvent.VK_S ) {
			if(gp.ui.slotRow != 1) {
				gp.playSE(4);
				gp.ui.slotRow++;	
			}
		}
		if(code == KeyEvent.VK_D ) {
			if(gp.ui.slotCol != 7) {
				gp.playSE(4);
				gp.ui.slotCol++;
			}
		}
		if(code == KeyEvent.VK_ENTER ) {
			gp.player.selectItem();
		}

	}

	@Override
	public void keyReleased(KeyEvent e) {
		int code = e.getKeyCode();
		if(code == KeyEvent.VK_W) {
			upPressed = false;
		}
		if(code == KeyEvent.VK_A) {
			leftPressed = false;
		}
		if(code == KeyEvent.VK_S) {
			downPressed = false;
		}
		if(code == KeyEvent.VK_D) {
			rightPressed = false;
		}		
	}

}
